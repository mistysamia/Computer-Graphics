<!-- saved from url=(0065)http://math.hws.edu/graphicsbook/source/webgl/simple-texture.html -->
<!-- modified by Mohammad Imrul Jubair -->

<html>
<title>LAB-1: Intro</title>
<canvas id="webglcanvas" width="500" height="500"></canvas>

<script> 

    var canvas = document.getElementById("webglcanvas"); //Passed the Canvas to  the dom 
    var  gl = canvas.getContext("webgl");  //API Call 
    gl.clearColor(0.75, 0.75, 0.75, 1.0);// R,G,B alpha(Transparancy) Range[0,1]
    gl.clear(gl.COLOR_BUFFER_BIT); // Clear the color from the memory what was setted before
	
    var vertexShaderSource =
       `attribute vec3 a_coords; // Vector Type 
        void main() {
            gl_Position = vec4(a_coords, 1.0); // GLSL Language ,1.0 cause  
        }`;
		// 3 ta point lagbe each as 3D tai vec3
    //attribute : vertex er 3 ta different different value niye jokhon kaj korbo shetake bole 

    var fragmentShaderSource =
       `void main() {
            gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0); // Input hishebe pacchi Restorization er output
        }`;
    
    var vsh = gl.createShader( gl.VERTEX_SHADER );// Ekta shader create korlam jeta vertex shader er
    gl.shaderSource( vsh, vertexShaderSource );// Eta ekta empty shader , 
	//ekhon vertex shader er jei code ta likhsilam ota connect kore dilam
    gl.compileShader( vsh );

    var fsh = gl.createShader( gl.FRAGMENT_SHADER );
    gl.shaderSource( fsh, fragmentShaderSource );
    gl.compileShader( fsh );
    
    var prog = gl.createProgram(); 
    
    gl.attachShader( prog, vsh );  // WebGL er function egula
    gl.attachShader( prog, fsh );
    gl.linkProgram( prog ); 
    gl.useProgram(prog); 

    var a_coords_location = gl.getAttribLocation(prog, "a_coords"); 
    //Cpu er sathe GPU connect kora , CPU er version banai newa
    var coords = new Float32Array( [0.0, 0.0, 0.0,
									0.0, 0.5, 0.0,
									0.5, 0.0, 0.0] ); //1D array

    var a_coords_buffer = gl.createBuffer(); 
    // CPU direct GPU ke access korte pare na , Tai ekta memory lagbe , Tai buffer create kore nite hoi
    gl.bindBuffer(gl.ARRAY_BUFFER, a_coords_buffer);//Empty buffer e Value input dilam 
    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW); 
    gl.vertexAttribPointer(a_coords_location, 3, gl.FLOAT, false, 0, 0); 
    //3 ta kore data nibo ,     
	gl.enableVertexAttribArray(a_coords_location);  
	//GPU ke bole dibe je buffer theke value access korte paro
   
	
	gl.drawArrays(gl.TRIANGLES, 0, 3); 
    //GL.lines, GL.points, 
</script>

</html>
